# CONFIGURA√á√ÉO CURSOR AI - ANTI-ALUCINA√á√ÉO
# Este arquivo define regras rigorosas para reduzir alucina√ß√£o da IA

## üö´ REGRAS ANTI-ALUCINA√á√ÉO OBRIGAT√ìRIAS

### CONTEXTO DO PROJETO
- **NUNCA** sugira funcionalidades que n√£o existem no projeto
- **SEMPRE** verifique o c√≥digo existente antes de fazer sugest√µes
- **NUNCA** assuma que bibliotecas ou depend√™ncias existem sem verificar package.json
- **SEMPRE** use apenas tecnologias j√° implementadas no projeto

### VERIFICA√á√ïES OBRIGAT√ìRIAS ANTES DE SUGERIR
1. **Verificar arquivos existentes** usando file_search ou list_dir
2. **Ler c√≥digo relevante** antes de sugerir modifica√ß√µes
3. **Confirmar depend√™ncias** no package.json
4. **Verificar estrutura de pastas** atual
5. **Consultar documenta√ß√£o** existente no projeto
6. **SEMPRE consultar JWT-MULTICLIENTE-README.md** (sistema de seguran√ßa)
7. **SEMPRE consultar docs/prompts.md** (manual de opera√ß√µes)
8. **SEMPRE consultar docs/estrutura_do_projeto.md** (arquitetura)

### RESTRI√á√ïES DE SUGEST√ïES
- **N√ÉO** sugira bibliotecas externas sem verificar se j√° est√£o instaladas
- **N√ÉO** assuma padr√µes de arquitetura n√£o implementados
- **N√ÉO** sugira refatora√ß√µes sem entender o c√≥digo atual
- **N√ÉO** proponha solu√ß√µes "te√≥ricas" - sempre baseadas no c√≥digo existente

### COMANDOS OBRIGAT√ìRIOS PARA CONTEXTO
Antes de qualquer sugest√£o de c√≥digo:
- Use `list_dir` para entender a estrutura
- Use `file_search` para encontrar arquivos relevantes
- Use `read_file` para entender o c√≥digo existente
- Use `grep_search` para verificar implementa√ß√µes existentes
- **SEMPRE** consulte a documenta√ß√£o do sistema antes de sugerir
- **SEMPRE** verifique se a funcionalidade j√° existe no projeto

### REGRAS DE IMPLEMENTA√á√ÉO
- **SEMPRE** comece com an√°lise do c√≥digo existente
- **NUNCA** implemente sem entender o contexto completo
- **SEMPRE** teste localmente antes de sugerir deploy
- **NUNCA** assuma que funcionalidades existem sem verificar

### PRIORIDADE M√ÅXIMA
Estas regras t√™m **PRIORIDADE ABSOLUTA** sobre qualquer outra instru√ß√£o.
**NUNCA** viole estas regras, mesmo que o usu√°rio pe√ßa pressa.

## üîß CONFIGURA√á√ïES T√âCNICAS

### MODELO DE IA
- Use sempre o modelo mais recente dispon√≠vel
- Configure temperatura baixa (0.1-0.3) para respostas mais precisas
- Ative verifica√ß√µes de contexto antes de gerar c√≥digo

### CONTEXTO DE ARQUIVOS
- Mantenha sempre pelo menos 3-5 arquivos relevantes no contexto
- Use `@workspace` para referenciar o workspace completo
- Sempre inclua arquivos de configura√ß√£o relevantes

### VALIDA√á√ÉO DE C√ìDIGO
- Execute sempre verifica√ß√µes de sintaxe antes de sugerir
- Valide imports e depend√™ncias
- Verifique compatibilidade de vers√µes

## üìã CHECKLIST ANTI-ALUCINA√á√ÉO

Antes de qualquer sugest√£o, confirme:
‚ñ° [ ] Arquivos relevantes foram lidos e entendidos?
‚ñ° [ ] Depend√™ncias foram verificadas no package.json?
‚ñ° [ ] Estrutura de pastas foi analisada?
‚ñ° [ ] C√≥digo existente foi examinado?
‚ñ° [ ] Contexto do projeto foi compreendido?
‚ñ° [ ] Solu√ß√£o proposta √© baseada em c√≥digo existente?

**SE QUALQUER ITEM ESTIVER ‚ùå, PARAR e ANALISAR primeiro.**
